version: "3.9"

services:
  bss-workplace-api:
    build:
      context: .
      dockerfile: Dockerfile
    restart: unless-stopped
    networks:
      - ompnw
    ports:
      - 8080:8080 # REST
      - 8082:8082 # gRPC
      - 9100:9100 # Metrics prometheus
      - 8000:8000 # Status prometheus
      - 40000:40000 # Debug port
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:8000/live']
      interval: 1m
      timeout: 10s
      retries: 3
      start_period: 20s
    volumes:
      - ./migrations:/root/migrations
      - ./config.yml:/root/config.yml
  swagger-ui:
    image: swaggerapi/swagger-ui:latest
    ports:
      - 8081:8080
    restart: always
    volumes:
      - ./swagger:/swagger
    environment:
      #API_URL: http://0.0.0.0:8080
      SWAGGER_JSON: /swagger/ozonmp/bss_workplace_api/v1/bss_workplace_api.swagger.json
      #SUPPORTED_SUBMIT_METHODS: "get, put, post, delete, options, head", patch, trace"
    depends_on:
      - bss-workplace-api
    networks:
      - ompnw

  postgres:
    image: postgres:14
    healthcheck:
      test: [ "CMD", "pg_isready", "-q", "-d", "postgres", "-U", "postgres" ]
      timeout: 45s
      interval: 10s
      retries: 10
    restart: always
    logging:
      driver: 'gelf'
      options:
        gelf-address: 'udp://localhost:12201'
        tag: postgres
    ports:
      - 5432:5432
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: bss_workplace_api
      APP_DB_USER: docker
      APP_DB_PASS: docker
    networks:
      - ompnw
    volumes:
      # - pgdata:/var/lib/postgresql/data
      - ./scripts/init-database.sh:/docker-entrypoint-initdb.d/init-database.sh

networks:
  ompnw:
    driver: bridge
